#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_buffer_reference2 : require
#extension GL_EXT_nonuniform_qualifier : require
#extension GL_KHR_shader_subgroup_ballot : require

struct _19
{
    float _m0;
};

struct _23
{
    vec4 _m0;
};

layout(set = 0, binding = 0, std430) restrict readonly buffer RTASHeap
{
    uvec2 _m0[];
} _13;

layout(push_constant, std430) uniform RootConstants
{
    uint _m0;
    uint _m1;
    uint _m2;
    uint _m3;
    uint _m4;
    uint _m5;
    uint _m6;
    uint _m7;
} registers;

layout(set = 3, binding = 0) uniform writeonly image2D _18[];
layout(location = 0) rayPayloadEXT _19 _21;
layout(location = 1) rayPayloadEXT _23 _25;

void main()
{
    traceRayEXT(accelerationStructureEXT(_13._m0[subgroupBroadcastFirst(registers._m0 + 30u)]), 0u, 0u, 0u, 0u, 0u, vec3(1.0, 2.0, 3.0), 1.0, vec3(0.0, 0.0, 1.0), 4.0, 1);
    traceRayEXT(accelerationStructureEXT(_13._m0[subgroupBroadcastFirst(registers._m0 + 30u)]), 0u, 1u, 0u, 0u, 0u, vec3(1.0, 2.0, 3.0), 1.0, vec3(0.0, 0.0, 1.0), 4.0, 0);
    imageStore(_18[registers._m3 + 10u], ivec2(uvec2(0u)), vec4(_21._m0 + _25._m0.x, _21._m0 + _25._m0.y, _21._m0 + _25._m0.z, _21._m0 + _25._m0.w));
}


#if 0
// SPIR-V disassembly
; SPIR-V
; Version: 1.4
; Generator: Unknown(30017); 21022
; Bound: 82
; Schema: 0
OpCapability Shader
OpCapability UniformBufferArrayDynamicIndexing
OpCapability SampledImageArrayDynamicIndexing
OpCapability StorageBufferArrayDynamicIndexing
OpCapability StorageImageArrayDynamicIndexing
OpCapability StorageImageWriteWithoutFormat
OpCapability GroupNonUniformBallot
OpCapability RayTracingKHR
OpCapability RuntimeDescriptorArray
OpCapability UniformBufferArrayNonUniformIndexing
OpCapability SampledImageArrayNonUniformIndexing
OpCapability StorageBufferArrayNonUniformIndexing
OpCapability StorageImageArrayNonUniformIndexing
OpCapability PhysicalStorageBufferAddresses
OpExtension "SPV_EXT_descriptor_indexing"
OpExtension "SPV_KHR_physical_storage_buffer"
OpExtension "SPV_KHR_ray_tracing"
OpMemoryModel PhysicalStorageBuffer64 GLSL450
OpEntryPoint RayGenerationKHR %3 "main" %8 %13 %18 %21 %25
OpName %3 "main"
OpName %6 "RootConstants"
OpName %8 "registers"
OpName %11 "RTASHeap"
OpName %19 ""
OpName %23 ""
OpDecorate %6 Block
OpMemberDecorate %6 0 Offset 0
OpMemberDecorate %6 1 Offset 4
OpMemberDecorate %6 2 Offset 8
OpMemberDecorate %6 3 Offset 12
OpMemberDecorate %6 4 Offset 16
OpMemberDecorate %6 5 Offset 20
OpMemberDecorate %6 6 Offset 24
OpMemberDecorate %6 7 Offset 28
OpDecorate %10 ArrayStride 8
OpMemberDecorate %11 0 Offset 0
OpDecorate %11 Block
OpDecorate %13 DescriptorSet 0
OpDecorate %13 Binding 0
OpDecorate %13 NonWritable
OpDecorate %13 Restrict
OpDecorate %18 DescriptorSet 3
OpDecorate %18 Binding 0
OpDecorate %18 NonReadable
%1 = OpTypeVoid
%2 = OpTypeFunction %1
%5 = OpTypeInt 32 0
%6 = OpTypeStruct %5 %5 %5 %5 %5 %5 %5 %5
%7 = OpTypePointer PushConstant %6
%8 = OpVariable %7 PushConstant
%9 = OpTypeVector %5 2
%10 = OpTypeRuntimeArray %9
%11 = OpTypeStruct %10
%12 = OpTypePointer StorageBuffer %11
%13 = OpVariable %12 StorageBuffer
%14 = OpTypeFloat 32
%15 = OpTypeImage %14 2D 0 0 0 2 Unknown
%16 = OpTypeRuntimeArray %15
%17 = OpTypePointer UniformConstant %16
%18 = OpVariable %17 UniformConstant
%19 = OpTypeStruct %14
%20 = OpTypePointer RayPayloadKHR %19
%21 = OpVariable %20 RayPayloadKHR
%22 = OpTypeVector %14 4
%23 = OpTypeStruct %22
%24 = OpTypePointer RayPayloadKHR %23
%25 = OpVariable %24 RayPayloadKHR
%26 = OpTypePointer PushConstant %5
%28 = OpConstant %5 0
%31 = OpConstant %5 30
%33 = OpConstant %5 3
%34 = OpTypePointer StorageBuffer %9
%37 = OpTypeAccelerationStructureKHR
%39 = OpConstant %14 1
%40 = OpConstant %14 0
%41 = OpConstant %14 2
%42 = OpConstant %14 3
%43 = OpConstant %14 4
%44 = OpTypeVector %14 3
%47 = OpTypePointer RayPayloadKHR %22
%61 = OpConstant %5 1
%64 = OpTypePointer RayPayloadKHR %14
%71 = OpTypePointer UniformConstant %15
%76 = OpConstant %5 10
%3 = OpFunction %1 None %2
%4 = OpLabel
OpBranch %80
%80 = OpLabel
%27 = OpAccessChain %26 %8 %28
%29 = OpLoad %5 %27
%30 = OpIAdd %5 %29 %31
%32 = OpGroupNonUniformBroadcastFirst %5 %33 %30
%35 = OpAccessChain %34 %13 %28 %32
%36 = OpLoad %9 %35
%38 = OpConvertUToAccelerationStructureKHR %37 %36
%45 = OpCompositeConstruct %44 %39 %41 %42
%46 = OpCompositeConstruct %44 %40 %40 %39
OpTraceRayKHR %38 %28 %28 %28 %28 %28 %45 %39 %46 %43 %25
%48 = OpInBoundsAccessChain %47 %25 %28
%49 = OpLoad %22 %48
%50 = OpCompositeExtract %14 %49 0
%51 = OpCompositeExtract %14 %49 1
%52 = OpCompositeExtract %14 %49 2
%53 = OpCompositeExtract %14 %49 3
%54 = OpAccessChain %26 %8 %28
%55 = OpLoad %5 %54
%56 = OpIAdd %5 %55 %31
%57 = OpGroupNonUniformBroadcastFirst %5 %33 %56
%58 = OpAccessChain %34 %13 %28 %57
%59 = OpLoad %9 %58
%60 = OpConvertUToAccelerationStructureKHR %37 %59
%62 = OpCompositeConstruct %44 %39 %41 %42
%63 = OpCompositeConstruct %44 %40 %40 %39
OpTraceRayKHR %60 %28 %61 %28 %28 %28 %62 %39 %63 %43 %21
%65 = OpInBoundsAccessChain %64 %21 %28
%66 = OpLoad %14 %65
%67 = OpFAdd %14 %66 %50
%68 = OpFAdd %14 %66 %51
%69 = OpFAdd %14 %66 %52
%70 = OpFAdd %14 %66 %53
%73 = OpAccessChain %26 %8 %33
%74 = OpLoad %5 %73
%75 = OpIAdd %5 %74 %76
%72 = OpAccessChain %71 %18 %75
%77 = OpLoad %15 %72
%78 = OpCompositeConstruct %9 %28 %28
%79 = OpCompositeConstruct %22 %67 %68 %69 %70
OpImageWrite %77 %78 %79
OpReturn
OpFunctionEnd
#endif
