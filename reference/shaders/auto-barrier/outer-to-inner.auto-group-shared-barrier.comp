#version 460
#extension GL_KHR_shader_subgroup_basic : require
layout(local_size_x = 32, local_size_y = 1, local_size_z = 1) in;

layout(set = 0, binding = 0, r32ui) uniform uimageBuffer _8;

shared uint _12[32];

void main()
{
    _12[gl_LocalInvocationIndex] = imageLoad(_8, int(gl_LocalInvocationIndex + 1024u)).x;
    subgroupMemoryBarrierShared();
    subgroupBarrier();
    if (gl_LocalInvocationIndex < 16u)
    {
        if (imageLoad(_8, int(gl_LocalInvocationIndex)).x == 50u)
        {
            imageStore(_8, int(gl_LocalInvocationIndex), uvec4(_12[gl_LocalInvocationIndex ^ 31u]));
        }
    }
}

/* WARNINGS:
- Has group shared access, but no group shared barrier anywhere.
*/


#if 0
// SPIR-V disassembly
; SPIR-V
; Version: 1.3
; Generator: Unknown(30017); 21022
; Bound: 45
; Schema: 0
OpCapability Shader
OpCapability ImageBuffer
OpMemoryModel Logical GLSL450
OpEntryPoint GLCompute %3 "main" %15
OpExecutionMode %3 LocalSize 32 1 1
OpName %3 "main"
OpDecorate %8 DescriptorSet 0
OpDecorate %8 Binding 0
OpDecorate %15 BuiltIn LocalInvocationIndex
%1 = OpTypeVoid
%2 = OpTypeFunction %1
%5 = OpTypeInt 32 0
%6 = OpTypeImage %5 Buffer 0 0 0 2 R32ui
%7 = OpTypePointer UniformConstant %6
%8 = OpVariable %7 UniformConstant
%9 = OpConstant %5 32
%10 = OpTypeArray %5 %9
%11 = OpTypePointer Workgroup %10
%12 = OpVariable %11 Workgroup
%14 = OpTypePointer Input %5
%15 = OpVariable %14 Input
%18 = OpConstant %5 1024
%20 = OpTypeVector %5 4
%23 = OpTypePointer Workgroup %5
%25 = OpTypeBool
%27 = OpConstant %5 16
%31 = OpConstant %5 50
%33 = OpConstant %5 31
%42 = OpConstant %5 3
%43 = OpConstant %5 264
%3 = OpFunction %1 None %2
%4 = OpLabel
OpBranch %37
%37 = OpLabel
%13 = OpLoad %6 %8
%16 = OpLoad %5 %15
%17 = OpIAdd %5 %16 %18
%19 = OpIAdd %5 %16 %18
%21 = OpImageRead %20 %13 %19
%22 = OpCompositeExtract %5 %21 0
%24 = OpAccessChain %23 %12 %16
OpStore %24 %22
%26 = OpULessThan %25 %16 %27
OpControlBarrier %42 %42 %43
OpSelectionMerge %41 None
OpBranchConditional %26 %38 %41
%38 = OpLabel
%28 = OpImageRead %20 %13 %16
%29 = OpCompositeExtract %5 %28 0
%30 = OpIEqual %25 %29 %31
OpSelectionMerge %40 None
OpBranchConditional %30 %39 %40
%39 = OpLabel
%32 = OpBitwiseXor %5 %16 %33
%34 = OpAccessChain %23 %12 %32
%35 = OpLoad %5 %34
%36 = OpCompositeConstruct %20 %35 %35 %35 %35
OpImageWrite %13 %16 %36
OpBranch %40
%40 = OpLabel
OpBranch %41
%41 = OpLabel
OpReturn
OpFunctionEnd
#endif
